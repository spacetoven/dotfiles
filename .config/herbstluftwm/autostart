#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# ibus & composite key
setxkbmap -option compose:menu
ibus-daemon -drx

# mouse acceleration settings
xinput --set-prop '9' 'libinput Accel Profile Enabled' 0, 1
xinput --set-prop '15' 'libinput Accel Profile Enabled' 0, 1

xsetroot -solid '#5A8E3A'
picom -b &
nitrogen --restore &

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
#Start_keys

# KB_GROUP HLWM
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-alacritty}" # use your $TERMINAL with xterm as fallback
#hc keybind $Mod-x spawn dmenu_run
hc keybind $Mod-x spawn rofi -modi "run,ssh" -show run -show ssh
hc keybind $Mod-forwardslash ./hlwm_keys.sh


# programm keybinds

# KB_GROUP browser
hc keybind $Mod-b spawn qutebrowser  

# KB_GROUP trading
hc keybind $Mod- spawn ./thinkorswim/thinkorswim
hc keybind $Mod-y spawn dex Desktop/fxTrade.desktop
hc keybind $Mod-t spawn snap run tradingview
hc keybind $Mod-backslash spawn wine /mnt/SSD/LQD\ MetaTrader\ 4/terminal.exe

# KB_GROUP misc
hc keybind $Mod-v spawn alacritty -e ranger	# file manager
hc keybind $Mod-F9 spawn alacritty -e spt	# spotify-tui
hc keybind $Mod-F10 spawn alacritty -e cmus	# cmus music player
hc keybind $Mod-F11 spawn sxiv /mnt/SSD/Lauren/	# SXIV w/ Lauren Tsai
hc keybind $Mod-g spawn alacritty -e vim	# vim spawn
hc keybind $Mod-F8 spawn discord		# discord
hc keybind $Mod-Print spawn maim -m 5 ~/Pictures/screen/$(date +%s).png	# screenshot all windows
hc keybind $Mod-Control-Print spawn maim -m 5 -s ~/Pictures/screen/$(date +%s).png	# select screenshot area
hc keybind $Mod-Shift-Print spawn maim -m 5 -i $(xdotool getactivewindow) ~/Pictures/screen/$(date +%s).png	# screenshot select window
hc keybind $Mod-equal spawn alacritty -e bc	# calculator
hc keybind $Mod-Shift-p spawn alacritty -e scrcpy

hc keybind $Mod-F4 spawn alacritty -e vul
hc keybind $Mod-F7 spawn alacritty -e trans

# KB_GROUP cmus 
hc keybind XF86AudioPlay spawn cmus-remote -u # Play
hc keybind XF86AudioStop spawn cmus-remote -s # Pause
hc keybind XF86AudioPrev spawn cmus-remote -r # Previous
hc keybind XF86AudioNext spawn cmus-remote -n # Next
hc keybind XF86AudioLowerVolume spawn cmus-remote -v -10% # Lower Volume
hc keybind XF86AudioRaiseVolume spawn cmus-remote -v +10% # Raise Volume
hc keybind XF86AudioMute spawn cmus-remote -C "win-add-p" # Add track to playlist


# basic movement in tiling and floating mode
# KB_GROUP focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# KB_GROUP moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right
hc keybind $Mod-Shift-0     move  chart
hc keybind $Mod-Shift-Control-l move_index +1
hc keybind $Mod-Shift-Control-h move_index -1

# KB_GROUP splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# KB_GROUP resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} chart MT4 tos phone  )
tag_keys=( {1..9} 0 Control+9 Control+0 Control+minus )


hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# KB_GROUP cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# KB_GROUP layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# KB_GROUP mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# KB_GROUP focus
hc keybind $Mod-m cycle_monitor +1
hc keybind $Mod-n cycle_monitor -1

hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#End_keys

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#555555'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#40f708'
hc set frame_bg_active_color '#40f708'
hc set frame_border_width 0 
hc set always_show_frame off
hc set frame_bg_transparent 1
hc set frame_transparent_width 0.5
hc set frame_gap 0

hc attr theme.active.color '#f698cf'
hc attr theme.normal.color '#f480c4'
hc attr theme.urgent.color green
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 1
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#ffb1d7'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#002d35'

hc set window_gap 6 
hc set frame_padding 1
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(Yad)' floating=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
#hc set_monitors 1050x1680+0+0 1920x1080+1050+600 1920x1080+2970+600
hc detect_monitors

# find the panel
#panel=~/.config/polybar/herbstluftwm/panel.sh
#[ -x "$panel" ] || panel=~/.config/herbstluftwm/panel.sh
#for monitor in $(hc list_monitors | cut -d: -f1) ; do
#    # start it on each monitor
#    "$panel" "$monitor" &
#done

# padding for polybar
hc pad 0 12
hc pad 1 12 
hc pad 2 12



#launching polybar
#~/.config/polybar/launch.sh --colorblocks
~/.config/polybar/colorblocks/launch.sh
#~/.config/polybar/hack/launch.sh



